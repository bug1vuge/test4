/*
 // Generated by CoffeeScript 1.7.1

 /**
 @license Sticky-kit v1.0.4 | WTFPL | Leaf Corcoran 2014 | http://leafo.net
 */

var initSly;

var
    load = {};
    load.jQuery  = $.Deferred();
    load.YouTube = $.Deferred();

function onYouTubeIframeAPIReady(){
    load.YouTube.resolve();
};

$(function(){
    load.jQuery.resolve();
});

$.when( load.jQuery, load.YouTube ).done(function() {

    var DarkBG = $('div.bg');

    var Closer = null;

    var Popup = {};
    Popup.node  = $('div.popup-holder');
    Popup.inc   = Popup.node.children('div.popup');
    Popup.close = Popup.node.find('span.btn-close-popup');
    Popup.title = Popup.node.find('.popup-head .title .h1');
    if (Popup.title.length == 0) {
        Popup.title = Popup.node.find('.popup-head .title h1');
    }
    Popup.text = Popup.node.find('.popup-text .cover');
    Popup.who = Popup.node.find('.popup-head .title em');
//    Popup.tags = Popup.node.find('.Tag');
    Popup.prof = Popup.node.find('.popup-head .title span.prof');
    Popup.city = Popup.node.find('.popup-head .title span.city');
    Popup.date = Popup.node.find('.popup-head .title span.date');
    Popup.korotko = Popup.node.find('.popup-korotko');
    Popup.img = Popup.node.find('.popup-head img');
    Popup.link = Popup.node.find('a.btn-link');
    Popup.info = Popup.node.find('div.popup-info');
    Popup.videoFrame = Popup.node.find('div.video-frame');
    Popup.videoContent = Popup.videoFrame.find('div.visual');

    $.ajaxSetup({
        // Disable caching of AJAX responses
        cache: false
    });

    function showPopup(reviewId, fromHistory) {
        var $link = $("#link_" + reviewId);
        var image = $link.attr('data-image');
        var originLink = $link.attr('data-link');
        var isVideo = $link.attr('data-video');
        var reviewLink = $link.attr('href');
        var youtubeLink = $link.attr('data-youtube');

        var who = $("#who_" + reviewId).html();
        var prof = $("#prof_" + reviewId).html();
        var city = $("#city_"+reviewId).html();
        var date = $("#date_"+reviewId).html();
        var title = $("#title_" + reviewId).html();
        var full = $("#full_" + reviewId).html();
        var korotko = $("#korotko_" + reviewId).html();

        Popup.title.html(title);
        if (full != undefined && !isVideo) {
            Popup.text.html(full);
            Popup.videoFrame.hide();
            Popup.info.show();
            Popup.inc.removeClass('video-popup');
        }
        else if (isVideo) {
            Popup.videoFrame.show();
            Popup.info.hide();
            Popup.inc.addClass('video-popup');

            Popup.videoContent.html('<div id="video_id"></div>');
//            if (full != undefined) {
//                Popup.text.append(full);
//            }
            var
                player = new YT.Player('video_id', {
                    height: '429',
                    width: '704',
                    videoId: youtubeLink.replace(/.*watch\?v\=/, ''),
                    playerVars: {
                        iv_load_policy: 3,
                        autoplay: 1,
                        rel: 0
                    },
                    events: {
                        //'onReady': function(){
                        //  player.playVideo();
                        //}
                    }
                });
        }
        Popup.who.html(who);

        if (city != undefined) {
            Popup.city.html(city);
            Popup.city.show();
        }
        else {
            Popup.city.hide();
        }

        if (prof != undefined) {
            Popup.prof.html(prof);
            Popup.prof.show();
        }
        else {
            Popup.prof.hide();
        }

        if (date != undefined) {
            Popup.date.html(date);
            Popup.date.show();
        }
        else {
            Popup.date.hide();
        }

        if (korotko != undefined) {
            Popup.korotko.html(korotko);
            Popup.korotko.show();
        } else {
            Popup.korotko.hide();
        }

        if (originLink != undefined) {
            Popup.link.show();
            Popup.link.attr('href', originLink);
        }
        else {
            Popup.link.hide();
        }

        if (image != undefined && !isVideo) {
            Popup.img.attr('src', '/results/images/avatars/' + image);
            Popup.img.show();
        }
        else {
            Popup.img.hide();
        }

        var
            D1 = $.Deferred(),
            D2 = $.Deferred();

        Popup.inc.hide();
        Popup.node.css('left', '0').hide();

        if( $.support.opacity ){
            Popup.node.fadeIn(400, function() {
                D1.resolve();
            });
            Popup.inc.fadeIn(400, function() {
                D2.resolve();
            });
        }
        else{
            Popup.node.show();
            Popup.inc.show();

            D1.resolve(); D2.resolve();
        }

        $.when( D1, D2 ).done(function() {
            $('body').css('overflow', 'hidden');
            initSly();
            Popup.text.parent().sly('toStart');
            alignPopup();
            bgResize();

            var url = window.location.href.replace('#', '').replace('?', '') + '?currentReviewId='+reviewId;
            $.get(url, function (data) {
                $('.prevnext').html('');
                $('.prevnext').append(data);
                alignPrevNext();
            });

            if (!fromHistory) {
                history.pushState({'reviewId':reviewId}, null, reviewLink);
                if (typeof YbStat !== "undefined") {
                    YbStat.pageView(reviewLink, baseCategoryUrl);
                }
            }

            Closer = function(fromHistory) {

                Popup.close.add(DarkBG).off('click');

                var
                    D1 = $.Deferred(),
                    D2 = $.Deferred();

                if( $.support.opacity ){
                    Popup.node.fadeOut(400, function() {
                        D1.resolve();
                    });
                    Popup.inc.fadeOut(400, function() {
                        D2.resolve();
                    });
                }
                else{
                    Popup.node.hide();
                    Popup.inc.hide();

                    D1.resolve(); D2.resolve();
                }

                $.when( D1, D2 ).done(function(){
                    $('body').css('overflow','auto');

                    Popup.title.html('');
                    Popup.text.html('');
                    Popup.who.html('');
                    Popup.videoContent.html('');
                    //Popup.img.hide();

                    if (!fromHistory) {
                        history.pushState({'reviewId':-1}, null, baseCategoryUrl);
                        if (typeof YbStat !== "undefined") {
                            YbStat.pageView(baseCategoryUrl, reviewLink);
                        }
                    }
                });
            };

            Popup.close.add(DarkBG).on('click', function() {
                Closer(false);
            });
        });
    }

    function popstate(e) {
        var loc = history.location || document.location;
        var state = history.state || null;
        var reviewId = null;
        if (state && state.reviewId) {
            reviewId = state.reviewId;
        }

        if (!reviewId || reviewId == -1)
        {
            //console.log('reviewId: ' + reviewId)
            //console.log( "return to: " + loc );
            if (Closer) {
                Closer(true);
            }

            return false;
        }

        if (reviewId) {
            setTimeout (function () {
                showPopup(reviewId, true);
            }, 400);
            return false;
        }
        //var reviewId = loc.split("/").pop().replace("review", "");

        //console.log( "return to: " + loc );
        //console.log( "review id: " + reviewId );
        //console.log(loc);
        //console.log(state);

        return false;
    }

    $(window).bind('popstate', popstate);
    $(window).resize(function () {
        if (Popup.node.is(":visible")) {
            bgResize();
            alignPopup();
        }
    });
//
//    Popup.close.add(DarkBG).on('click', function() {
//        Closer(false);
//    });

    $('body').keydown(function (e) {
        if (e.keyCode == '27') {
            Closer(false);
        }
    })

    function alignPopup() {
//        if ((($(window).height() / 2) - (Popup.inc.outerHeight() / 2)) + $(window).scrollTop() < 0) {
//            Popup.inc.css({'top': 0, 'left': (($(window).width() - Popup.inc.outerWidth()) / 2) + $(window).scrollLeft()});
//            return false;
//        }
        Popup.inc.css({
            'top': (($(window).height() - Popup.inc.outerHeight()) / 2) + $(window).scrollTop(),
            'left': (($(window).width() - Popup.inc.outerWidth()) / 2) + $(window).scrollLeft(),
            'margin': 0
        });
        $('div.popup-box.right-box').css({
            'top': ($(window).height() - 334) / 2 + $(window).scrollTop()
        });
    }

    function alignPrevNext() {
        $('div.popup-box').css({
            'top': ($(window).height() - 334) / 2 + $(window).scrollTop()
        });
        $('.prev,.next', Popup.node).css({
            'top': ($(window).height() - 70) / 2 + $(window).scrollTop()
        });
    }

    function bgResize() {
        var _w = $(window).width(),
            _h = $(document).height();
        DarkBG.css({"height": _h, "width": _w + $(window).scrollLeft()});
    }


    $(document).on('click', ".content-articles >li>a.text-opener, .content-articles >li>a.video-opener", function(e){
        e.preventDefault();

        var reviewId = $(this).attr('data-id');

        showPopup(reviewId, false);
    });
});

(function () {
    var $, win;

    $ = this.jQuery;

    win = $(window);

    $.fn.stick_in_parent = function (opts) {
        var elm, inner_scrolling, offset_top, parent_selector, sticky_class, _fn, _i, _len;
        if (opts == null) {
            opts = {};
        }
        sticky_class = opts.sticky_class, inner_scrolling = opts.inner_scrolling, parent_selector = opts.parent, offset_top = opts.offset_top;
        if (offset_top == null) {
            offset_top = 0;
        }
        if (parent_selector == null) {
            parent_selector = void 0;
        }
        if (inner_scrolling == null) {
            inner_scrolling = true;
        }
        if (sticky_class == null) {
            sticky_class = "is_stuck";
        }
        _fn = function (elm, padding_bottom, parent_top, parent_height, top, height, el_float) {
            var bottomed, detach, fixed, last_pos, offset, parent, recalc, recalc_and_tick, spacer, tick;
            if (elm.data("sticky_kit")) {
                return;
            }
            elm.data("sticky_kit", true);
            parent = elm.parent();
            if (parent_selector != null) {
                parent = parent.closest(parent_selector);
            }
            if (!parent.length) {
                throw "failed to find stick parent";
            }
            fixed = false;
            bottomed = false;
            spacer = $("<div />");
            spacer.css('position', elm.css('position'));
            recalc = function () {
                var border_top, padding_top, restore;
                border_top = parseInt(parent.css("border-top-width"), 10);
                padding_top = parseInt(parent.css("padding-top"), 10);
                padding_bottom = parseInt(parent.css("padding-bottom"), 10);
                parent_top = parent.offset().top + border_top + padding_top;
                parent_height = parent.height();
                restore = fixed ? (fixed = false, bottomed = false, elm.insertAfter(spacer).css({
                    position: "",
                    top: "",
                    width: "",
                    bottom: ""
                }), spacer.detach(), true) : void 0;
                top = elm.offset().top - parseInt(elm.css("margin-top"), 10) - offset_top;
                height = elm.outerHeight(true);
                el_float = elm.css("float");
                spacer.css({
                    width: elm.outerWidth(true),
                    height: height,
                    display: elm.css("display"),
                    "vertical-align": elm.css("vertical-align"),
                    "float": el_float
                });
                if (restore) {
                    return tick();
                }
            };
            recalc();
            if (height === parent_height) {
                return;
            }
            last_pos = void 0;
            offset = offset_top;
            tick = function () {
                var css, delta, scroll, will_bottom, win_height;
                scroll = win.scrollTop();
                if (last_pos != null) {
                    delta = scroll - last_pos;
                }
                last_pos = scroll;
                if (fixed) {
                    will_bottom = scroll + height + offset > parent_height + parent_top;
                    if (bottomed && !will_bottom) {
                        bottomed = false;
                        elm.css({
                            position: "fixed",
                            bottom: "",
                            top: offset
                        }).trigger("sticky_kit:unbottom");
                    }
                    if (scroll < top) {
                        fixed = false;
                        offset = offset_top;
                        if (el_float === "left" || el_float === "right") {
                            elm.insertAfter(spacer);
                        }
                        spacer.detach();
                        css = {
                            position: "",
                            width: "",
                            top: ""
                        };
                        elm.css(css).removeClass(sticky_class).trigger("sticky_kit:unstick");
                    }
                    if (inner_scrolling) {
                        win_height = win.height();
                        if (height > win_height) {
                            if (!bottomed) {
                                offset -= delta;
                                offset = Math.max(win_height - height, offset);
                                offset = Math.min(offset_top, offset);
                                if (fixed) {
                                    elm.css({
                                        top: offset + "px"
                                    });
                                }
                            }
                        }
                    }
                }
                else {
                    if (scroll > top) {
                        fixed = true;
                        css = {
                            position: "fixed",
                            top: offset
                        };
                        css.width = elm.css("box-sizing") === "border-box" ? elm.outerWidth() + "px" : elm.width() + "px";
                        elm.css(css).addClass(sticky_class).after(spacer);
                        if (el_float === "left" || el_float === "right") {
                            spacer.append(elm);
                        }
                        elm.trigger("sticky_kit:stick");
                    }
                }
                if (fixed) {
                    if (will_bottom == null) {
                        will_bottom = scroll + height + offset > parent_height + parent_top;
                    }
                    if (!bottomed && will_bottom) {
                        bottomed = true;
                        if (parent.css("position") === "static") {
                            parent.css({
                                position: "relative"
                            });
                        }
                        return elm.css({
                            position: "absolute",
                            bottom: padding_bottom,
                            top: "auto"
                        }).trigger("sticky_kit:bottom");
                    }
                }
            };
            recalc_and_tick = function () {
                recalc();
                return tick();
            };
            detach = function () {
                win.unbind("scroll", tick);
                $(document.body).off("sticky_kit:recalc", recalc_and_tick);
                elm.unbind("sticky_kit:detach", detach);
                elm.removeData("sticky_kit");
                elm.css({
                    position: "",
                    bottom: "",
                    top: ""
                });
                parent.position("position", "");
                if (fixed) {
                    elm.insertAfter(spacer).removeClass(sticky_class);
                    return spacer.remove();
                }
            };
            win.bind("touchmove", tick);
            win.bind("scroll", tick);
            win.bind("resize", recalc_and_tick);
            $(document.body).bind("sticky_kit:recalc", recalc_and_tick);
            elm.bind("sticky_kit:detach", detach);
            return setTimeout(tick, 0);
        };
        for (_i = 0, _len = this.length; _i < _len; _i++) {
            elm = this[_i];
            _fn($(elm));
        }
        return this;
    };

}).call(this);


$(document).ready(function () {
    var emailPattern = /^\w+[\w-\.+]*\@\w+((-\w+)|(\w*))\.[a-z]{2,3}$/i;

    //registration form submit
    $(".user-form").submit(function(e) {
        var $name = $("div.form-box input[name=FIO]").css("border","none");
        var $email = $("div.form-box input[name=email]").css("border","none");
        var $phone = $("div.form-box input[name=telephon]").css("border","none");
        if ($name.val() == "" ) {
            $name.css("border","1px solid red");

            return false;
        }

        if ($email.val() == "" || !emailPattern.test($email.val())) {
            $email.css("border","1px solid red");

            return false;
        }

        $.ajax({
            type: "POST",
            url: "/register.php",
            dataType: "json",
            data: {
                FIO: $name.val(),
                email: $email.val(),
                telephon: $phone.val()
            },
            success: function (data) {
                //console.log(data);
                $.get("https://www.yburlan.ru/get_session_value.php?name=inserted&amp;remove=1", function(data){
                    //console.log(data);
                    if (data && data==1) {
                        window.dataLayer.push({
                            "event": "registration",
                            "eventCategory" : "Registration",
                            "eventAction" : "registered",
                            "eventLabel":"review"
                        });
                    } else if(data && data==0){
                        window.dataLayer.push({
                            "event": "registration",
                            "eventCategory" : "oldRegistration",
                            "eventAction" : "oldregistered",
                            "eventLabel":""
                        });
                    }
                });
                if (data.clientId) {
                    clientId = data.clientId;
                    $("#default-reg-block").hide();
                    $("#all-ok-reg-block").show();
                }
            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.log(jqXHR, textStatus, errorThrown);
            }
        });

        e.preventDefault(); //STOP default action
    });
});

$(document).ready(function () {
    $('.menu-list ').stick_in_parent({
        parent: '.container'
    });
//    $('.side-box.side-info').stick_in_parent({
//		parent: '.menu-list'
//	});
    $('.filter-head').stick_in_parent({
        parent: '.container'
    });
    $('.video-block .open-btn').click(function (e) {
        $(this).closest('.video-block').toggleClass('open-video');
        $(this).closest('.video-block').find('.related-videos').stop().slideToggle(500, function () {
            $('.gallery-wrap').sly('reload')
        });
        e.preventDefault();
    });
    $('.slider-holder').fadeGallery();
    $('.schedule-slider .slider-cover').each(function () {
        $(this).galleryScroll();
    })
    $('.group-info .group-box').galleryScroll();
    initTabs();
    $('input, textarea').placeholder();
    initSizeText();
    $(window).resize(function () {
        initSizeText();
        initSly();
    });
    $(window).load(function () {
        initSly();
        // Триггер ресайза для центрирования попапа на малых экранах
        $(window).trigger('resize');
    });
    $(".show-box a").on('click', function (e) {
        e.preventDefault();
        var url = window.location.href.split(/[?#]/)[0] + '?offset=' + (reviewOffset + 30);
        //console.log(url);
        $.get(url, function (data) {
            $('.content-articles').append(data);
            reviewOffset += 30;
            $(document.body).trigger("sticky_kit:recalc");
            /*
            $('.menu-list ').stick_in_parent({
                parent: '.container'
            });
            */
        });
    });
    function initSizeText() {
        var _width = 0, _delta;
        if ($('.holder').outerWidth() > 1300) {
            _delta = '100%';
        } else {
            _delta = (($('.holder').outerWidth() / 1000) * 100) + '%';
        }
        $('html').css('font-size', _delta);
    }

    initSly = function () {
        var $frame4 = $('.aside-gallery');
        $frame4.each(function () {
            var $wrap4 = $(this).parent();
            $(this).find('li').width($(this).width());
            $(this).sly({
                activateMiddle: 1,
                horizontal: 1,
                itemNav: 'forceCentered',
                smart: 1,
                activateOn: 'click',
                mouseDragging: 1,
                touchDragging: 1,
                releaseSwing: 1,
                speed: 400,
                elasticBounds: 1,
                easing: 'swing',
                dragHandle: 1,
                dynamicHandle: 0,
                clickBar: 1,
                activatePageOn: 'click',
                pagesBar: $wrap4.find('.switcher'),
                pageBuilder: function (index) {
                    return '<li><span>' + (index + 1) + '</span></li>';
                },
                next: $wrap4.find('.next'),
                prev: $wrap4.find('.prev')
            });
            $(this).sly('reload');
        });
        var $frame3 = $('.gallery-wrap');
        $frame3.each(function () {
            var $wrap3 = $(this).parent(),
                _el = 0;
            $(this).find('ul li').each(function () {
                _el = _el + $(this).width()
            });
            $(this).find('ul').width(_el);
            $(this).sly({
                horizontal: 1,
                itemNav: 'top',
                smart: 1,
                activateOn: 'click',
                mouseDragging: 1,
                touchDragging: 1,
                releaseSwing: 1,
                scrollBar: $wrap3.find('.scrollbar'),
                scrollBy: 1000,
                speed: 400,
                elasticBounds: 1,
                easing: 'swing',
                dragHandle: 1,
                dynamicHandle: 0,
                clickBar: 1,
                forward: $wrap3.find('.next'),
                backward: $wrap3.find('.prev')
            });
            $(this).sly('reload');
        });
        var $frame2 = $('.news-block');
        $frame2.each(function () {
            var $wrap2 = $(this).parent();
            $(this).sly({
                horizontal: 0,
                itemNav: 'top',
                activateMiddle: 0,
                smart: 1,
                activateOn: 'click',
                mouseDragging: 1,
                touchDragging: 1,
                releaseSwing: 1,
                scrollBar: $wrap2.find('.scrollbar'),
                scrollBy: 100,
                speed: 400,
                elasticBounds: 1,
                easing: 'swing',
                dragHandle: 1,
                dynamicHandle: 0,
                clickBar: 1
            });
            $frame2.sly('reload');
        });
        var $frame1 = $('.popup-text');
        $frame1.each(function () {
            var $wrap1 = $(this).parent();
            $(this).sly({
                horizontal: 0,
                itemNav: 'top',
                activateMiddle: 0,
                smart: 1,
                activateOn: 'click',
                mouseDragging: 0,
                touchDragging: 1,
                releaseSwing: 1,
                scrollBar: $wrap1.find('.scrollbar'),
                scrollBy: 100,
                speed: 400,
                elasticBounds: 1,
                easing: 'swing',
                dragHandle: 1,
                dynamicHandle: 0,
                clickBar: 1
            });
            $frame1.sly('reload');
        });
        setTimeout(function () {
            $frame2.each(function () {
                if ($(this).find('ul').height() < $(this).height()) {
                    $(this).prev().hide();
                } else {
                    $(this).prev().show();
                }
            });
            $frame1.each(function () {
                if ($(this).find('.cover').height() < $(this).height()) {
                    $(this).prev().hide();
                } else {
                    $(this).prev().show();
                }
            });
        }, 150);
    }
    function initTabs() {
        $('.tabset ul.tab-control li a').on('click', function () {
            setTimeout(function () {
                initSly();
            }, 100);
            var thisHold = $(this).closest(".tabset");
            var _ind = $(this).closest('li').index();
            thisHold.children('.tab-body').children(".tab").removeClass('active');
            thisHold.children('.tab-body').children("div.tab:eq(" + _ind + ")").addClass('active');
            $(this).closest("ul").find(".active").removeClass("active");
            $(this).parent().addClass("active");
            return false;
        });
        $('.group-info ul.group-control li a').on('click', function () {
            var thisHold = $(this).closest(".group-info");
            var _ind = $(this).closest('li').index();
            thisHold.children('.group-body').children(".group-box").removeClass('active');
            thisHold.children('.group-body').children("div.group-box:eq(" + _ind + ")").addClass('active');
            $(this).closest("ul").find(".active").removeClass("active");
            $(this).parent().addClass("active");
            return false;
        });
    }
});
jQuery.fn.fadeGallery = function (_options) {
    var _options = jQuery.extend({
        slideElements: 'ul.slider-box > li',
        pagerLinks: '.switcher-cover ul a',
        btnNext: 'a.next',
        btnPrev: 'a.prev',
        btnPlayPause: 'a.play-pause',
        pausedClass: 'paused',
        playClass: 'playing',
        activeClass: 'active',
        pauseOnHover: false,
        autoRotation: false,
        autoHeight: false,
        switchTime: 6000,
        duration: 650,
        generatePagination: false,
        pagerList: '<ul>',
        pagerListItem: '<li><a href="#"></a></li>',
        pagerListItemText: 'a',
        pagerLinks: '.switcher-cover li',
        event: 'click'
    }, _options);

    return this.each(function () {
        var _this = jQuery(this);
        var _slides = jQuery(_options.slideElements, _this);
        var _pagerLinks = jQuery(_options.pagerLinks, _this);
        var _btnPrev = jQuery(_options.btnPrev, _this);
        var _btnNext = jQuery(_options.btnNext, _this);
        var _btnPlayPause = jQuery(_options.btnPlayPause, _this);
        var _pauseOnHover = _options.pauseOnHover;
        var _autoRotation = _options.autoRotation;
        var _activeClass = _options.activeClass;
        var _pausedClass = _options.pausedClass;
        var _playClass = _options.playClass;
        var _autoHeight = _options.autoHeight;
        var _duration = _options.duration;
        var _switchTime = _options.switchTime;
        var _controlEvent = _options.event;

        var _hover = false;
        var _prevIndex = 0;
        var _currentIndex = 0;
        var _slideCount = _slides.length;
        var _timer;
        if (!_slideCount) return;
        _slides.hide().eq(_currentIndex).show();
        if (_autoRotation) _this.removeClass(_pausedClass).addClass(_playClass);
        else _this.removeClass(_playClass).addClass(_pausedClass);

        if (_btnPrev.length) {
            _btnPrev.bind(_controlEvent, function () {
                prevSlide();
                return false;
            });
        }
        if (_btnNext.length) {
            _btnNext.bind(_controlEvent, function () {
                nextSlide();
                return false;
            });
        }
        if (_pagerLinks.length) {
            _pagerLinks.each(function (_ind) {
                jQuery(this).bind(_controlEvent, function () {
                    if (_currentIndex != _ind) {
                        _prevIndex = _currentIndex;
                        _currentIndex = _ind;
                        switchSlide();
                    }
                    return false;
                });
            });
        }

        if (_btnPlayPause.length) {
            _btnPlayPause.bind(_controlEvent, function () {
                if (_this.hasClass(_pausedClass)) {
                    _this.removeClass(_pausedClass).addClass(_playClass);
                    _autoRotation = true;
                    autoSlide();
                } else {
                    if (_timer) clearTimeout(_timer);
                    _this.removeClass(_playClass).addClass(_pausedClass);
                }
                return false;
            });
        }

        function prevSlide() {
            _prevIndex = _currentIndex;
            if (_currentIndex > 0) _currentIndex--;
            else _currentIndex = _slideCount - 1;
            switchSlide();
        }

        function nextSlide() {
            _prevIndex = _currentIndex;
            if (_currentIndex < _slideCount - 1) _currentIndex++;
            else _currentIndex = 0;
            switchSlide();
        }

        function refreshStatus() {
            if (_pagerLinks.length) _pagerLinks.removeClass(_activeClass).eq(_currentIndex).addClass(_activeClass);
            _slides.eq(_prevIndex).removeClass(_activeClass);
            _slides.eq(_currentIndex).addClass(_activeClass);
        }

        function switchSlide() {
            _slides.eq(_prevIndex).fadeOut(_duration);
            _slides.eq(_currentIndex).fadeIn(_duration);
            refreshStatus();
            autoSlide();
        }

        function autoSlide() {
            if (!_autoRotation || _hover) return;
            if (_timer) clearTimeout(_timer);
            _timer = setTimeout(nextSlide, _switchTime + _duration);
        }

        if (_pauseOnHover) {
            _this.hover(function () {
                _hover = true;
                if (_timer) clearTimeout(_timer);
            }, function () {
                _hover = false;
                autoSlide();
            });
        }
        refreshStatus();
        autoSlide();
    });
}
jQuery.fn.galleryScroll = function (_options) {
    // defaults options
    var _options = jQuery.extend({
        btPrev: '.prev',
        btNext: '.next',
        holderList: 'div.slider-list-holder',
        scrollElParent: 'ul',
        scrollEl: 'li',
        slideNum: '.switcher',
        duration: 500,
        step: 1,
        circleSlide: true,
        disableClass: 'disable',
        funcOnclick: null,
        autoSlide: false,
        innerMargin: 0,
        stepWidth: false
    }, _options);

    return this.each(function () {
        var _this = jQuery(this);

        var _holderBlock = jQuery(_options.holderList, _this);
        var _gWidth = _holderBlock.width();
        var _animatedBlock = jQuery(_options.scrollElParent, _holderBlock);
        var _liWidth = jQuery(_options.scrollEl, _animatedBlock).outerWidth(true);
        var _liSum = jQuery(_options.scrollEl, _animatedBlock).length * _liWidth;
        if (_this.hasClass('index-gallery')) {
            _liSum = _liSum - 0;
        }
        var _margin = -_options.innerMargin;
        var f = 0;
        var _step = 0;
        var _autoSlide = _options.autoSlide;
        var _timerSlide = null;
        if (!_options.step) _step = _gWidth; else _step = _options.step * _liWidth;
        if (_options.stepWidth) _step = _options.stepWidth;

        if (!_options.circleSlide) {
            if (_options.innerMargin == _margin)
                jQuery(_options.btPrev, _this).addClass('prev-' + _options.disableClass);
        }
        if (_options.slideNum && !_options.step) {
            var _lastSection = 0;
            var _sectionWidth = 0;
            while (_sectionWidth < _liSum) {
                _sectionWidth = _sectionWidth + _gWidth;
                if (_sectionWidth > _liSum) {
                    _lastSection = _sectionWidth - _liSum;
                }
            }
        }
        if (_autoSlide) {
            _timerSlide = setTimeout(function () {
                autoSlide(_autoSlide);
            }, _autoSlide);
            _animatedBlock.hover(function () {
                clearTimeout(_timerSlide);
            }, function () {
                _timerSlide = setTimeout(function () {
                    autoSlide(_autoSlide)
                }, _autoSlide);
            });
        }

        // click button 'Next'
        jQuery(_options.btNext, _this).bind('click', function () {
            jQuery(_options.btPrev, _this).removeClass('prev-' + _options.disableClass);
            if (!_options.circleSlide) {
                if (_margin + _step > _liSum - _gWidth - _options.innerMargin) {
                    if (_margin != _liSum - _gWidth - _options.innerMargin) {
                        _margin = _liSum - _gWidth + _options.innerMargin;
                        jQuery(_options.btNext, _this).addClass('next-' + _options.disableClass);
                        _f2 = 0;
                    }
                } else {
                    _margin = _margin + _step;
                    if (_margin == _liSum - _gWidth - _options.innerMargin) {
                        jQuery(_options.btNext, _this).addClass('next-' + _options.disableClass);
                        _f2 = 0;
                    }
                }
            } else {
                if (_margin + _step > _liSum - _gWidth + _options.innerMargin) {
                    if (_margin != _liSum - _gWidth + _options.innerMargin) {
                        _margin = _liSum - _gWidth + _options.innerMargin;
                    } else {
                        _f2 = 1;
                        _margin = -_options.innerMargin;
                    }
                } else {
                    _margin = _margin + _step;
                    _f2 = 0;
                }
            }

            _animatedBlock.animate({marginLeft: -_margin + "px"}, {queue: false, duration: _options.duration });

            if (_timerSlide) {
                clearTimeout(_timerSlide);
                _timerSlide = setTimeout(function () {
                    autoSlide(_options.autoSlide)
                }, _options.autoSlide);
            }

            if (_options.slideNum && !_options.step) jQuery.fn.galleryScroll.numListActive(_margin, jQuery(_options.slideNum, _this), _gWidth, _lastSection);
            if (jQuery.isFunction(_options.funcOnclick)) {
                _options.funcOnclick.apply(_this);
            }
            return false;
        });
        // click button 'Prev'
        var _f2 = 1;
        jQuery(_options.btPrev, _this).bind('click', function () {
            jQuery(_options.btNext, _this).removeClass('next-' + _options.disableClass);
            if (_margin - _step >= -_step - _options.innerMargin && _margin - _step <= -_options.innerMargin) {
                if (_f2 != 1) {
                    _margin = -_options.innerMargin;
                    _f2 = 1;
                } else {
                    if (_options.circleSlide) {
                        _margin = _liSum - _gWidth + _options.innerMargin;
                        f = 1;
                        _f2 = 0;
                    } else {
                        _margin = -_options.innerMargin
                    }
                }
            } else if (_margin - _step < -_step + _options.innerMargin) {
                _margin = _margin - _step;
                f = 0;
            }
            else {
                _margin = _margin - _step;
                f = 0;
            }
            ;

            if (!_options.circleSlide && _margin == _options.innerMargin) {
                jQuery(this).addClass('prev-' + _options.disableClass);
                _f2 = 0;
            }

            if (!_options.circleSlide && _margin == -_options.innerMargin) jQuery(this).addClass('prev-' + _options.disableClass);
            _animatedBlock.animate({marginLeft: -_margin + "px"}, {queue: false, duration: _options.duration});

            if (_options.slideNum && !_options.step) jQuery.fn.galleryScroll.numListActive(_margin, jQuery(_options.slideNum, _this), _gWidth, _lastSection);

            if (_timerSlide) {
                clearTimeout(_timerSlide);
                _timerSlide = setTimeout(function () {
                    autoSlide(_options.autoSlide)
                }, _options.autoSlide);
            }

            if (jQuery.isFunction(_options.funcOnclick)) {
                _options.funcOnclick.apply(_this);
            }
            return false;
        });

        if (_liSum <= _gWidth) {
            jQuery(_options.btPrev, _this).addClass('prev-' + _options.disableClass).unbind('click');
            jQuery(_options.btNext, _this).addClass('next-' + _options.disableClass).unbind('click');
        }
        // auto slide
        function autoSlide(autoSlideDuration) {
            //if (_options.circleSlide) {
            jQuery(_options.btNext, _this).trigger('click');
            //}
        };
        // Number list
        jQuery.fn.galleryScroll.numListCreate = function (_elNumList, _liSumWidth, _width, _section) {
            var _numListElC = '';
            var _num = 1;
            var _difference = _liSumWidth + _section;
            while (_difference > 0) {
                _numListElC += '<li><a href="">' + _num + '</a></li>';
                _num++;
                _difference = _difference - _width;
            }
            jQuery(_elNumList).html('<ul>' + _numListElC + '</ul>');
        };
        jQuery.fn.galleryScroll.numListActive = function (_marginEl, _slideNum, _width, _section) {
            if (_slideNum) {
                jQuery('a', _slideNum).removeClass('active');
                var _activeRange = _width - _section - 1;
                var _n = 0;
                if (_marginEl != 0) {
                    while (_marginEl > _activeRange) {
                        _activeRange = (_n * _width) - _section - 1 + _options.innerMargin;
                        _n++;
                    }
                }
                var _a = (_activeRange + _section + 1 + _options.innerMargin) / _width - 1;
                jQuery('a', _slideNum).eq(_a).addClass('active');
            }
        };
        if (_options.slideNum && !_options.step) {
            jQuery.fn.galleryScroll.numListCreate(jQuery(_options.slideNum, _this), _liSum, _gWidth, _lastSection);
            jQuery.fn.galleryScroll.numListActive(_margin, jQuery(_options.slideNum, _this), _gWidth, _lastSection);
            numClick();
        }
        ;
        function numClick() {
            jQuery(_options.slideNum, _this).find('a').click(function () {
                jQuery(_options.btPrev, _this).removeClass('prev-' + _options.disableClass);
                jQuery(_options.btNext, _this).removeClass('next-' + _options.disableClass);

                var _indexNum = jQuery(_options.slideNum, _this).find('a').index(jQuery(this));
                _margin = (_step * _indexNum) - _options.innerMargin;
                f = 0;
                _f2 = 0;
                if (_indexNum == 0) _f2 = 1;
                if (_margin + _step > _liSum) {
                    _margin = _margin - (_margin - _liSum) - _step + _options.innerMargin;
                    if (!_options.circleSlide) jQuery(_options.btNext, _this).addClass('next-' + _options.disableClass);
                }
                _animatedBlock.animate({marginLeft: -_margin + "px"}, {queue: false, duration: _options.duration});

                if (!_options.circleSlide && _margin == 0) jQuery(_options.btPrev, _this).addClass('prev-' + _options.disableClass);
                jQuery.fn.galleryScroll.numListActive(_margin, jQuery(_options.slideNum, _this), _gWidth, _lastSection);

                if (_timerSlide) {
                    clearTimeout(_timerSlide);
                    _timerSlide = setTimeout(function () {
                        autoSlide(_options.autoSlide)
                    }, _options.autoSlide);
                }
                return false;
            });
        };
        jQuery(window).resize(function () {
            _gWidth = _holderBlock.width();
            _liWidth = jQuery(_options.scrollEl, _animatedBlock).outerWidth(true);
            _liSum = jQuery(_options.scrollEl, _animatedBlock).length * _liWidth;
            if (!_options.step) _step = _gWidth; else _step = _options.step * _liWidth;
            if (_options.slideNum && !_options.step) {
                var _lastSection = 0;
                var _sectionWidth = 0;
                while (_sectionWidth < _liSum) {
                    _sectionWidth = _sectionWidth + _gWidth;
                    if (_sectionWidth > _liSum) {
                        _lastSection = _sectionWidth - _liSum;
                    }
                }
                ;
                jQuery.fn.galleryScroll.numListCreate(jQuery(_options.slideNum, _this), _liSum, _gWidth, _lastSection);
                jQuery.fn.galleryScroll.numListActive(_margin, jQuery(_options.slideNum, _this), _gWidth, _lastSection);
                numClick();
            }
            ;
            //if (_margin == _options.innerMargin) jQuery(this).addClass(_options.disableClass);
            if (_liSum - _gWidth < _margin - _options.innerMargin) {
                if (!_options.circleSlide) jQuery(_options.btNext, _this).addClass('next-' + _options.disableClass);
                _animatedBlock.animate({marginLeft: -(_liSum - _gWidth + _options.innerMargin)}, {queue: false, duration: _options.duration});
            }
            ;
        });
    });
}